function fpeData = process3DFootPlacementEstimator(...
  mass,...
  wholeBodyData,...
  columnCenterOfMassPosition,...
  columnCenterOfMassVelocity,...
  columnInertia,...
  columnAngularMomentum,...
  gravityVector,...
  contactPlanes,...
  omegaSmall,...
  solutionTolerance,...  
  maximumIterations,...
  flag_fpeEvaluateDerivatives,...
  flag_fpeVerbose,...
  fpeFileName,...
  flag_loadFromFile)



if(flag_loadFromFile==0)
  
  npts = size(wholeBodyData,1);
  nPlanes = size(contactPlanes,1);

  if(flag_fpeEvaluateDerivatives==1)
    fpeData(nPlanes) = ...
          struct('f'               ,  zeros(npts,1),...
                 'phi'             ,  zeros(npts,1),...
                 'r0F0'            ,  zeros(npts,3),...
                 'projectionError' ,  zeros(npts,1),...
                 'n'               ,  zeros(npts,3),...
                 'u'               ,  zeros(npts,3),...
                 'k'               ,  zeros(npts,3),...                 
                 'r0G0'            ,  zeros(npts,3),...
                 'w0C0n'           ,  zeros(npts,1),...
                 'w0G0'            ,  zeros(npts,3),...  
                 'w0C0'            ,  zeros(npts,3),...
                 'h'               ,  zeros(npts,1),...
                 'v0C0u'           ,  zeros(npts,1),...
                 'v0C0k'           ,  zeros(npts,1),...
                 'J'               ,  zeros(npts,1),...                 
                 'Df_Dphi'         ,  zeros(npts,1),...
                 'Df_Domega'       ,  zeros(npts,1),...
                 'Df_Dh'           ,  zeros(npts,1),...
                 'Df_Dvx'          ,  zeros(npts,1),...
                 'Df_Dvy'          ,  zeros(npts,1),...
                 'Df_DJ'           ,  zeros(npts,1),...
                 'Df_Dm'           ,  zeros(npts,1),...
                 'Df_Dg'           ,  zeros(npts,1));
  else
    fpeData(nPlanes) = ...
          struct('f'               ,  zeros(npts,1),...
                 'phi'             ,  zeros(npts,1),...
                 'r0F0'            ,  zeros(npts,3),...
                 'projectionError' ,  zeros(npts,1),...
                 'n'               ,  zeros(npts,3),...
                 'u'               ,  zeros(npts,3),...
                 'k'               ,  zeros(npts,3),...                                  
                 'r0G0'            ,  zeros(npts,3),...
                 'w0C0n'           ,  zeros(npts,1),...
                 'w0G0'            ,  zeros(npts,3),... 
                 'w0C0'            ,  zeros(npts,3),...
                 'h'               ,  zeros(npts,1),...
                 'v0C0u'           ,  zeros(npts,1),...
                 'v0C0k'           ,  zeros(npts,1),...
                 'J'               ,  zeros(npts,1));

  end

  for i=1:1:npts
    r0C0 = wholeBodyData(i,columnCenterOfMassPosition)';
    v0C0 = wholeBodyData(i,columnCenterOfMassVelocity)';
    JC0 = [wholeBodyData(i,columnInertia(1,1:3));...
         wholeBodyData(i,columnInertia(1,4:6));...
         wholeBodyData(i,columnInertia(1,7:9))];
    HC0 = [wholeBodyData(i,columnAngularMomentum(1,1:3))]';    

    fpeInfoPrevious = [];

    for j=1:1:size(contactPlanes,1)

      %To dos:
      % - Update the projection error and w0G0 to be on the
      %   post contact angular velocity
      fpeInfo = calc3DFootPlacementEstimatorInfo(mass,...
                                              r0C0,...
                                              v0C0,...                                                    
                                              JC0,...                                                    
                                              HC0,...
                                              contactPlanes(j,:)',...
                                              gravityVector,...
                                              omegaSmall,...
                                              solutionTolerance,...
                                              maximumIterations,...
                                              flag_fpeEvaluateDerivatives,...
                                              flag_fpeVerbose,...
                                              fpeInfoPrevious);
      fpeInfoPrevious = fpeInfo;
      fpeData(j).f(i,1)               = fpeInfo.f;
      fpeData(j).phi(i,1)             = fpeInfo.phi;
      fpeData(j).r0F0(i,:)            = fpeInfo.r0F0';
      fpeData(j).projectionError(i,1) = fpeInfo.projectionError;
      fpeData(j).n(i,:)               = fpeInfo.n';
      fpeData(j).u(i,:)               = fpeInfo.u';
      fpeData(j).k(i,:)               = fpeInfo.k';      
      fpeData(j).r0G0(i,:)            = fpeInfo.r0G0';
      fpeData(j).w0C0n(i,1)           = fpeInfo.w0C0n;
      fpeData(j).w0G0(i,:)            = fpeInfo.w0G0';
      fpeData(j).w0C0(i,:)            = fpeInfo.w0C0';
      fpeData(j).h(i,1)               = fpeInfo.h ;
      fpeData(j).v0C0u(i,1)           = fpeInfo.v0C0u;
      fpeData(j).v0C0k(i,1)           = fpeInfo.v0C0k;
      fpeData(j).J(i,1)               = fpeInfo.J;



      if(flag_fpeEvaluateDerivatives==1)
        fpeData(j).Df_Dphi(i,1)    = fpeInfo.Df_Dphi  ;  
        fpeData(j).Df_Dwn(i,1)     = fpeInfo.Df_Dwn   ;  
        fpeData(j).Df_Dh(i,1)      = fpeInfo.Df_Dh    ;  
        fpeData(j).Df_Dvu(i,1)     = fpeInfo.Df_Dvu   ;  
        fpeData(j).Df_Dvk(i,1)     = fpeInfo.Df_Dvk   ;  
        fpeData(j).Df_DJ(i,1)      = fpeInfo.Df_DJ    ;           
        fpeData(j).Df_Dm(i,1)      = fpeInfo.Df_Dm    ;           
        fpeData(j).Df_Dg(i,1)      = fpeInfo.Df_Dg    ;           
      end
    end
  end  
  

  
  save(fpeFileName,...
      'fpeData');    
else
  load( fpeFileName);
end
